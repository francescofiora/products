plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.3'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'checkstyle'
  id 'jacoco'
  id 'org.owasp.dependencycheck' version '7.4.4'
}

sourceCompatibility = 1.17
targetCompatibility = 1.17

repositories {
  mavenLocal()
  mavenCentral()
}

group 'it.francescofiora'
version '1.0-SNAPSHOT'

def springdoc_openapi_version = property('springdoc-openapi.version')
def postgresql_version = property('postgresql.version')
def lombok_version = property('lombok.version')
def logback_version = property('logback.version')
def openpojo_version = property('openpojo.version')
def testcontainers_version = property('testcontainers.version')
def cucumber_version = property('cucumber.version')
def feign_hc5_version = property('feign-hc5.version')

ext {
  set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

dependencies {

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

  implementation "io.github.openfeign:feign-hc5:${feign_hc5_version}"

  implementation "ch.qos.logback:logback-classic:${logback_version}"

  implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdoc_openapi_version}"

  implementation "org.postgresql:postgresql:${postgresql_version}"

  implementation 'it.francescofiora:product-common:1.0-SNAPSHOT'
  implementation 'it.francescofiora:product-dto:1.0-SNAPSHOT'
  implementation 'it.francescofiora:product-client:1.0-SNAPSHOT'
  implementation 'it.francescofiora:company-dto:1.0-SNAPSHOT'
  implementation 'it.francescofiora:company-client:1.0-SNAPSHOT'

  implementation platform("org.testcontainers:testcontainers-bom:${testcontainers_version}")

  implementation "org.projectlombok:lombok:${lombok_version}"
  annotationProcessor "org.projectlombok:lombok:${lombok_version}"

  implementation 'org.testcontainers:testcontainers'
  implementation 'org.testcontainers:postgresql'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation "com.openpojo:openpojo:$openpojo_version"
  testImplementation "org.projectlombok:lombok:${lombok_version}"

  testImplementation "io.cucumber:cucumber-java:${cucumber_version}"
  testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumber_version}"
  testImplementation "io.cucumber:cucumber-spring:${cucumber_version}"
  testImplementation 'org.junit.platform:junit-platform-suite:1.10.2'

  testImplementation "org.testcontainers:junit-jupiter"

  testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
}

task cleanResources(type: Delete) {
  delete "build/resources"
}

defaultTasks "bootRun"

springBoot {
  mainClass.set("it.francescofiora.product.itt.Application")
  buildInfo()
}

sourceSets {
  main {
    java {
      srcDirs 'java'
    }
    resources {
      srcDirs 'resources'
    }
  }
  test {
    java {
      srcDirs 'java'
    }
  }
}

checkstyle {
  toolVersion property('checkstyle.version')
  configFile  file("./../config/checkstyle/checkstyle.xml")
}
tasks.withType(Checkstyle) {
  reports {
    xml.required = false
    html.required = true
  }
}
checkstyleMain {
  source ='src/main/java'
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
    csv.required = false
    html.required = true
    html.outputLocation = file("${buildDir}/reports/jacoco/test")
    xml.outputLocation = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

wrapper {
    gradleVersion = "7.5"
}
