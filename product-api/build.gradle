plugins {
  id 'org.springframework.boot' version '3.4.2'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'info.solidsoft.pitest' version '1.15.0'
  id 'org.owasp.dependencycheck' version '8.4.3'
  id 'com.google.cloud.tools.jib' version '3.4.4'
}

def main_class = 'it.francescofiora.product.api.Application'

def liquibase_version = property('liquibase.version')
def springdoc_openapi_version = parent.property('springdoc-openapi.version')
def mapstruct_version = parent.property('mapstruct.version')
def lombok_version = parent.property('lombok.version')
def openpojo_version = parent.property('openpojo.version')
def postgresql_version = parent.property('postgresql.version')
def apache_httpclient_version = parent.property('apache-httpclient.version')
def micrometer_prometheus_version = parent.property('micrometer-prometheus.version')

ext {
  set('springCloudVersion', "2024.0.0")
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
  implementation 'org.springframework.cloud:spring-cloud-starter-config'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

  implementation "org.liquibase:liquibase-core:${liquibase_version}"

  implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdoc_openapi_version}"

  implementation "io.micrometer:micrometer-registry-prometheus:${micrometer_prometheus_version}"

  implementation "org.projectlombok:lombok:${lombok_version}"
  implementation "org.mapstruct:mapstruct:${mapstruct_version}"

  annotationProcessor "org.projectlombok:lombok:${lombok_version}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

  implementation project(':product-common')
  implementation project(':product-dto')

  implementation "org.postgresql:postgresql:${postgresql_version}"

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.hsqldb:hsqldb'
  testImplementation "com.openpojo:openpojo:$openpojo_version"
  testImplementation "org.projectlombok:lombok:${lombok_version}"
  testImplementation "org.apache.httpcomponents.client5:httpclient5:${apache_httpclient_version}"

  testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
}

springBoot {
  mainClass.set("${main_class}")
  buildInfo()
}

jib {
  container {
    mainClass = "${main_class}"
  }
  from {
    image = 'azul/zulu-openjdk-alpine:17'
  }
  to {
    image = 'francescofiora-product'
    tags = ['latest']
  }
  container {
    creationTime = 'USE_CURRENT_TIMESTAMP'
    workingDirectory = '/workspace'
  }
}

pitest {
  junit5PluginVersion = '1.2.1'
  pitestVersion = '1.15.2'
}
