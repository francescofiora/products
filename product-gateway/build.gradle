plugins {
  id 'org.springframework.boot' version '3.4.4'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.owasp.dependencycheck' version '8.4.3'
  id 'com.google.cloud.tools.jib' version '3.4.5'
}

def main_class = 'it.francescofiora.product.gateway.GatewayApplication'

def springdoc_openapi_version = parent.property('springdoc-openapi.version')
def micrometer_prometheus_version = parent.property('micrometer-prometheus.version')
def lombok_version = parent.property('lombok.version')

ext {
  set('springCloudVersion', "2024.0.0")
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
  implementation "io.micrometer:micrometer-registry-prometheus:${micrometer_prometheus_version}"

  implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.2'
  implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.0.2'

  implementation "org.projectlombok:lombok:${lombok_version}"
  annotationProcessor "org.projectlombok:lombok:${lombok_version}"

  testImplementation "org.projectlombok:lombok:${lombok_version}"
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
  testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
}

springBoot {
  mainClass.set("${main_class}")
  buildInfo()
}

jib {
  container {
    mainClass = "${main_class}"
  }
  from {
    image = 'azul/zulu-openjdk-alpine:17'
  }
  to {
    image = 'francescofiora-product-gateway'
    tags = ['latest']
  }
  container {
    creationTime = 'USE_CURRENT_TIMESTAMP'
    workingDirectory = '/workspace'
  }
}
